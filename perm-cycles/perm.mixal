MAXWDS    EQU   1200
PERMS     ORIG  *+MAXWDS
BUFFER    ORIG  *+24
CARDS     EQU   16
PRINTER   EQU   18
BEGIN     IN    PERMS(CARDS)        * load first card
          LDA   EQUALS              * rA <- "    ="
          ENT2  0                   * J <- 0
1H        JBUS  *(CARDS)
          CMPA  PERMS+15,2          * EQ = last card
          JE    *+2                 * if last card don't load next card
          IN    PERMS+16,2(CARDS)   * start loading next card into next region
          ENT1  BUFFER              * [print card]
          JBUS  *(PRINTER)
          MOVE  PERMS,2(16)
          OUT   BUFFER(PRINTER)     * print buffer (current card contents)
          JE    1F                  * last card printing, DONE
          INC2  16                  * advance J to next region
          CMP2  =MAXWDS-16=         * where is J relative to last region
          JLE   1B                  * before or in last region? continue
          HLT   666                 * excessive input!
1H        INC2  15
          ST2   SIZE                * SIZE = size of input
          ENT2  0                   * J <- 0 (reset counter)
          LDAN  PERMS,2             * load symbol, tagged
          CMPA  LPAREN(1:5)         * is it '('?
          JNE   2F
          STA   PERMS,2             * if it is, store it
          INC2  1                   * load next nonblank symbol into rX
          LDXN  PERMS,2
          JXZ   *-2
2H        CMPA  RPAREN(1:5)         * is it ')'?
          JNE   *+2
          STX   PERMS,2
          INC3  1
          CMP3  SIZE
          JL    2B                  * if still within input, continue looping
DONE      HLT
EQUALS    ALF   "    ="
LPAREN    ALF   "    ("
RPAREN    ALF   ")    "
          END   BEGIN

